<%= link_to 'Edit', edit_playlist_path(@playlist), class: 'btn btn-sm btn-primary right' %> <%= link_to 'Back', playlists_path, class: 'btn btn-sm btn-primary right' %>

<h1>
  <%= @playlist.name %>
  <%#= link_to 'Play', '', id: 'play', class: 'btn btn-sm btn-success' %>
  <button type="button" name="button" id="play" class="btn btn-sm btn-success">Play</button>
</h1>

<p><strong>Hold Time:</strong> <%= @playlist.hold_time %> seconds</p>

<table class='table'>
  <thead>
    <tr>
      <th>Sequence Number</th>
      <th>Image file</th>
      <th>Name</th>
      <th colspan="4"></th>
    </tr>
  </thead>

  <tbody>
    <% @playlist.playlist_poses.each do |playlist_pose| %>
      <tr>
        <td><%= playlist_pose.sequence_number %></td>
        <td><%= link_to (image_tag playlist_pose.pose.image_file), playlist_pose.pose, class: 'thumbnail' %></td>
        <td><%= playlist_pose.pose.name %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%#= javascript_tag("playTracks(#{@playlist.hold_time}, #{@playlist.tracks_for_js})") %>

<script type="text/javascript">
  playTracks(<%= @playlist.hold_time %>, <%= @playlist.tracks_for_js %>);

  // for each audio file in array
  //   play file
  //   wait x seconds
  // at end, play ending chime

  function playTracks(holdTimeInput, audioTracks){
    document.addEventListener('DOMContentLoaded', function () {
      const defaultHoldTime = 5;
      const holdTime = holdTimeInput === 0 ? defaultHoldTime : holdTimeInput;

      const soundPlaylistComplete = 'chime.wav';
      // audioTracks.push(soundPlaylistComplete)

      const button = document.getElementById('play')
      button.addEventListener('click', function(e) {
        event.preventDefault;
        console.log(`holdTime: ${holdTime}`)

        let i = 0;

        async function playTrackAndWait () {
          setTimeout(async function () {    //  call a 3s setTimeout when the loop is called

            if (i < audioTracks.length) {
              console.log(`playing: ${audioTracks[i]}`);
              const track = new Audio(`/audio_files/${audioTracks[i]}`);

              track.play().catch(e => { console.log(e); });
              i++;

              await playTrackAndWait();
            } else {
              console.log('end')
              const track = new Audio(`/audio_files/${soundPlaylistComplete}`);
              track.play().catch(e => { console.log(e); });

            }
          }, holdTime * 1000)
        }

        playTrackAndWait(); //  >:( you recursive bastard.
      });// onclick
    }); //DOMContentLoaded
  };// playTracks
</script>
